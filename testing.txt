class Solution {
    public void merge(int[] nums1, int m, int[] nums2, int n) {
       if(n==0){
           return;
       } 
       if(m==0){
           for(int i=0;i<n;i++){
               nums1[i]=nums2[i];
               return;
           }
       }
       int j=0;
      for(int i=m;i<m+n;i++){
              nums1[i]=nums2[j];
              System.out.println(nums1[i]);
              j++;
      }
      int p=0;
      int pp=nums1.length;
       merges(nums1,p,pp);
      }
      public static void merges(int[] nums1,int i,int j){
          while(i<j){
              int mid=i+(j-i)/2;
              merges(nums1,i,mid);
              merges(nums1,mid+1,j);
              mergeSort(nums1,i,mid,j);
          }
      }
      public static void mergeSort(int[] nums,int i,int mid,int j){
          int n1=mid-i+1;
int n2=j-mid;
int[] arr1=new int[n1];
int[] arr2=new int[n2];
for(int p=0;p<n1;p++){
arr1[p]=nums[i+p];
}
for(int p=0;p<n2;p++){
arr2[p]=nums[mid+p+1];
}

int l=0,r=0;
int k=i;
while(l<n1&&r<n2){
if(arr1[l]<arr2[r]){
nums[k]=arr1[l];
l++;
}
else{
nums[k]=arr2[r];
r++;
}
k++;
}
while(l<n1){
nums[k]=arr1[l];
l++;
k++;
}
while(r<n2){
nums[k]=arr2[r];
r++;
k++;
}
      }
}
public class Main
{
	public static void main(String[] args) {
	Solution sol=new Solution();
	int[] arr1=new int[6];
	int[] arr2=new int[3];
    for(int i=0;i<3;i++){
        arr1[i]=i+1;
        arr2[i]=i+2;
    }
    sol.merge(arr1,3,arr2,3);
    for(int i=0;i<6;i++){
        System.out.println(arr1[i]);
    }
    
}
}

